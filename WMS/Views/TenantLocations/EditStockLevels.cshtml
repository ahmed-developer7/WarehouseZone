@model IEnumerable<Ganedata.Core.Entities.Domain.WarehouseProductLevelViewModel>
@using Ganedata.Core.Entities.Helpers

@section scripts {

    @Html.DevExpress().GetStyleSheets(
        new StyleSheet { ExtensionType = ExtensionType.GridView, Theme = GaneStaticAppExtensions.DevexTheme }
        )

    @Html.DevExpress().GetScripts(
        new Script { ExtensionType = ExtensionType.GridView }
        )
}

@{
    ViewBag.Title = (ViewBag.WarehouseName ?? "Warehouse")+" - Stock Levels";
}

<h2><span> @(ViewBag.WarehouseName??"Location") - Replenishment Levels</span></h2>

<script type="text/javascript">
    
    MVCxClientGlobalEvents.AddControlsInitializedEventHandler(OnBeginGridCallback);

    function OnBeginGridCallback(s, e) {
        e.customArgs = MVCxClientUtils.GetSerializedEditorValuesInContainer("frmProductLocationLevels");
    }

    function OnEndGridCallback(s, e) {
        var lastIndex = parseInt($("#LastEditingRowIndex").val());
        if (lastIndex >= 0) {
            SetGridEditorToRowIndex(lastIndex);
        }
    }

    function SetGridEditorToRowIndex(index) {
        warehouseStocksGridView.StartEditRow(index);
    }
     
    function OnQuantitiesChanged(s, e) {
        warehouseStocksGridView.UpdateEdit();
    }
     
    function OnStockLevelsGridFocusChanged(s, e) {
        $("#LastEditingRowIndex").val(e.cellInfo.rowVisibleIndex);
    }

</script>
@using (Html.BeginForm("UpdateProductLevels","TenantLocations", FormMethod.Post, new { @id="frmProductLocationLevels" }))
{
    @Html.AntiForgeryToken()
    @Html.Hidden("LastEditingRowIndex")

    <div class="input-group h-100 justify-content-center align-items-center">
    @Html.Partial("_StockLevelsPartial", Model)
    </div>
}


<div class="col-md-offset-2 col-md-10 bottom-right">
    <div class="back-list">@Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })</div>
</div>



