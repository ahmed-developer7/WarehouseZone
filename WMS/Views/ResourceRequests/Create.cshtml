@model Ganedata.Core.Models.ResourceRequestsViewModel
@using Ganedata.Core.Entities.Helpers

@section scripts {

    @Html.DevExpress().GetStyleSheets(
        new StyleSheet { ExtensionType = ExtensionType.SpinEdit, Theme = GaneStaticAppExtensions.DevexTheme },
        new StyleSheet { ExtensionType = ExtensionType.DateEdit, Theme = GaneStaticAppExtensions.DevexTheme }
        )

    @Html.DevExpress().GetScripts(
        new Script { ExtensionType = ExtensionType.SpinEdit },
        new Script { ExtensionType = ExtensionType.DateEdit }
        )
}

@{
    ViewBag.Title = "Create";
}

<h2><span>Create New Request</span></h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="col-md-6 pull-left">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="input-group h-100 justify-content-center align-items-center">
        @Html.LabelFor(model => model.HolidayReason, htmlAttributes: new { @class = "col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.HolidayReason, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.HolidayReason, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="input-group h-100 justify-content-center align-items-center">
        @Html.LabelFor(model => model.ResourceId, htmlAttributes: new { @class = "col-md-4" })
        <div class="col-md-8">
            @Html.DropDownListFor(model => model.ResourceId, ViewBag.ResourceId as IEnumerable<SelectListItem>, new { @class = "chosen-select" })
            @Html.ValidationMessageFor(model => model.ResourceId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="input-group h-100 justify-content-center align-items-center">
        @Html.LabelFor(model => model.RequestType, htmlAttributes: new { @class = "col-md-4" })
        <div class="col-md-8">
            @Html.EnumDropDownListFor(model => model.RequestType, htmlAttributes: new { @class = "form-control chosen-select" })
            @Html.ValidationMessageFor(model => model.RequestType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="input-group h-100 justify-content-center align-items-center">
        @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "col-md-4" })
        <div class="col-md-8">
            @Html.DevExpress().DateEditFor(m => m.StartDate,
            settings =>
            {
                settings.Name = "StartDate";
                settings.Properties.UseMaskBehavior = true;
                settings.Properties.EditFormat = EditFormat.Custom;
                settings.Properties.EditFormatString = "dd/MM/yyyy hh:mm tt";
                settings.Properties.TimeSectionProperties.Visible = true;
                settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Custom;
                settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormatString = "hh:mm tt";
                settings.Date = DateTime.Today;
                settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                settings.ControlStyle.CssClass = "form-control";
                settings.Properties.ClientSideEvents.GotFocus = "function(s, e) { s.ShowDropDown(); }";

            }
        ).Bind(DateTime.Today).GetHtml()
            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="input-group h-100 justify-content-center align-items-center">
        @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "col-md-4" })
        <div class="col-md-8">
            @Html.DevExpress().DateEditFor(m => m.EndDate,
            settings =>
            {
                settings.Name = "EndDate";
                settings.Properties.UseMaskBehavior = true;
                settings.Properties.EditFormat = EditFormat.Custom;
                settings.Properties.EditFormatString = "dd/MM/yyyy hh:mm tt";
                settings.Properties.TimeSectionProperties.Visible = true;
                settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Custom;
                settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormatString = "hh:mm tt";
                settings.Date = DateTime.Today;
                settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                settings.ControlStyle.CssClass = "form-control";
                settings.Properties.ClientSideEvents.GotFocus = "function(s, e) { s.ShowDropDown(); }";

            }
        ).Bind(DateTime.Today).GetHtml()
            @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
        </div>
    </div>
    
</div>
    <div class="col-md-6 pull-left">
        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control", rows = "8" } })
                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="input-group h-100 justify-content-center align-items-center">
        <div class="col-md-offset-2 col-md-10 bottom-right">
            <input type="submit" value="Save" class="btn btn-primary" />
            <div class="back-list">@Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })</div>
        </div>
    </div>
}