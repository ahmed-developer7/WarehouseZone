
@using Ganedata.Core.Entities.Helpers
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = ViewBag.productId + "consignmentaddressdetailsgridview" + ViewBag.processId;
        settings.CallbackRouteValues = new { Controller = "SalesOrders", Action = "_ConsignmentAddressDetails", ProcessId = ViewBag.processId };
        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);

        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsPopup.HeaderFilter.Height = 200;
        settings.SettingsPopup.HeaderFilter.MinWidth = 500;
        settings.Settings.ShowFilterBar = GridViewStatusBarMode.Visible;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCells;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.Columns.Add(col =>
        {
            col.FieldName = "OrderProcessID";
            col.Visible = false;

        });
        settings.KeyFieldName = "OrderProcessID";
        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowFocusedRow = true;

        settings.Columns.Add("ShipmentAddressLine1");
        settings.Columns.Add("ShipmentAddressLine2");
        settings.Columns.Add("ShipmentAddressLine3");
        settings.Columns.Add("ShipmentAddressLine4");
        settings.Columns.Add("ShipmentAddressPostcode");
        settings.Columns.Add(column =>
        {
            column.Caption = "Actions";
            column.Width = System.Web.UI.WebControls.Unit.Percentage(10);
            column.SetDataItemTemplateContent(m =>
            {
            var OrderProcessID = (int)DataBinder.Eval(m.DataItem, "OrderProcessID");
            var functon = string.Format("EditDeliveryAddress({0})", OrderProcessID);
            ViewContext.Writer.Write("<a target='javascript:;' alt='Edit delivery address' title='Edit delivery address' class='btn fa fa-pencil' onclick=" + functon + " role='button'></a>");
                        
                 

            });
        });


        //settings.ClientSideEvents.FocusedRowChanged = "OnGridFocusedRowChanged";
        settings.SettingsPager.PageSizeItemSettings.Visible = true;
        settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "10", "20", "50" };
    });
}
@grid.Bind(Model).GetHtml()