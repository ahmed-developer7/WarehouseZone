@model Ganedata.Core.Entities.Domain.Order
@using Ganedata.Core.Entities.Helpers
@using Ganedata.Core.Entities.Enums

@section scripts {

    @Html.DevExpress().GetStyleSheets(
            new StyleSheet { ExtensionType = ExtensionType.PopupControl, Theme = GaneStaticAppExtensions.DevexTheme },
            new StyleSheet { ExtensionType = ExtensionType.GridView, Theme = GaneStaticAppExtensions.DevexTheme }
            )

    @Html.DevExpress().GetScripts(
            new Script { ExtensionType = ExtensionType.PopupControl },
            new Script { ExtensionType = ExtensionType.GridView }
            )
}

@{
    ViewBag.Title = "Create Purchase Order";
}
<script type="text/javascript">
    function OnGridFocusedRowChanged(s, e) {
        var name = s.name;
        if (name.indexOf("gridViewOrdDet") >= 0) {


            $('#selkeyhdPrddet').val(s.GetRowKey(s.GetFocusedRowIndex()));
        }
    }
</script>
<h2><span>@ViewBag.Title</span></h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { @id = "frmPurchaseOrderCreate", @class = "frmOrders" }))
{
    @Html.HiddenFor(m => m.InventoryTransactionTypeId, new { id = "inverntoryType" });
    @Html.AntiForgeryToken()
    @Html.Hidden("selkeyhdPrddet", 100)
    @Html.Hidden("selkeyhdPHistory", null)
    @Html.Hidden("fragment", ViewBag.Fragment as string)
    @Html.Hidden("EmailTemplate", (int)WorksOrderNotificationTypeEnum.PurchaseOrderTemplate)
    <div class=" col-md-12 order-forms pull-left">
        @Html.ValidationSummary(true)
        <div class="col-md-5 p-0 pull-left mb-2">
            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.OrderNumber, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.OrderNumber)
                    <b id="btnGenerateNewOrderNumber" class="fa fa-retweet" title="Generate new order Number"></b>
                    @Html.ValidationMessageFor(model => model.OrderNumber)
                </div>
            </div>
            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.IssueDate, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.DevExpress().DateEditFor(m => m.IssueDate,
                             settings =>
                             {
                                 settings.Name = "IssueDate";
                                 settings.Properties.DisplayFormatString = "dd/MM/yyyy";
                                 settings.ClientVisible = true;
                                 settings.Properties.ClientSideEvents.GotFocus = "function(s, e) { s.ShowDropDown(); }";
                                 settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                 settings.ControlStyle.CssClass = "form-control";
                                 settings.Properties.ClientSideEvents.GotFocus = "function(s, e) { s.ShowDropDown(); }";
                                 settings.Properties.MinDate = DateTime.Today;
                             }
                             ).GetHtml()
                    @Html.ValidationMessageFor(model => model.IssueDate)

                </div>
            </div>
            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.ExpectedDate, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.DevExpress().DateEditFor(m => m.ExpectedDate,
                             settings =>
                             {
                                 settings.Name = "ExpectedDate";
                                 settings.Properties.DisplayFormatString = "dd/MM/yyyy HH:mm";
                                 settings.Properties.TimeSectionProperties.Visible = true;
                                 settings.Properties.EditFormat = EditFormat.Custom;
                                 settings.ClientVisible = true;
                                 settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                 settings.ControlStyle.CssClass = "form-control";
                                 settings.Properties.ClientSideEvents.GotFocus = "function(s, e) { s.ShowDropDown(); }";

                             }
                             ).GetHtml()
                    @Html.ValidationMessageFor(model => model.ExpectedDate)

                </div>
            </div>
            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    <div class="notes-holder-box">
                        <b class="fa fa-file-o"></b>
                        <a href="#" style="cursor:pointer" onclick="javaScript: ModelOrderNotes.Show();">Notes</a>
                    </div>

                </div>
            </div>

            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.AccountID, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownListFor(m => m.AccountID, ViewBag.Accounts as IEnumerable<SelectListItem>, "Select Account", new { @class = "chosen-select orderactcnts" })
                </div>
            </div>

            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.AccountContactId, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @*onchange = "AccountContactChange(event);"*@
                    @Html.DropDownListFor(m => m.AccountContactId, ViewBag.AccountContacts as IEnumerable<SelectListItem>, new { @class = "chosen-select" })
                </div>
            </div>
            <div class="input-group h-100 justify-content-center align-items-center" id="dvloan">
                @Html.LabelFor(model => model.LoanID, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownListFor(m => m.LoanID, ViewBag.TenantLoanTypes as IEnumerable<SelectListItem>, new { @class = "chosen-select" })
                </div>
            </div>
            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.Label("Auth User", htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownList("AuthUserId", ViewBag.AuthUsers as IEnumerable<SelectListItem>, new { @class = "chosen-select", disabled = "disabled" })
                </div>
            </div>
            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.DepartmentId, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownListFor(m => m.DepartmentId, ViewBag.Departments as IEnumerable<SelectListItem>, new { @class = "chosen-select" })
                </div>
            </div>
            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.InvoiceNo, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.InvoiceNo)

                </div>
            </div>

            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.InvoiceDetails, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.InvoiceDetails)

                </div>
            </div>

            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.OrderCost, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.DevExpress().SpinEditFor(m => m.OrderCost,
                             settings =>
                             {
                                 settings.Name = "OrderCost";
                                 settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                 settings.ControlStyle.CssClass = "form-control";

                             }).GetHtml()
                    @Html.ValidationMessageFor(model => model.OrderCost)
                </div>
            </div>
            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.DirectShip, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.DirectShip)

                </div>
            </div>
            <div class="input-group h-100 justify-content-center align-items-center" style="display:none" id="directShipdd">
                @Html.Label("DirectShip Orders", htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    <div>
                        <div class="col-11 p-0 mt-1 pull-left">
                            
                            @Html.DropDownList("DirectShipOrders", ViewBag.DirectOrderList as SelectList, "Select Orders", new { @class = "chosen-select" })

                        </div>
                        <div class="col-1 p-0 pull-left">
                            <a href="javascript:;" onclick="GetOrderDetail();" id="AccountAddress" class="btn btn-primary"><i class="fa fa-circle-o-notch" style="font-size:24px"></i></a>
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <div class="col-md-7 p-0 pull-left mb-2">
            <div class="col-md-12 report-date-header">
                <div class="input-group h-100 justify-content-center align-items-center">
                    <input type="button" id="OrderDetailadd" class="btn btn-primary orddet" value="Add">
                    <input type="button" id="OrderDetailUpdate" class="btn btn-primary orddet" value="Update">
                    <input type="button" id="OrderDetailDelete" class="btn btn-primary orddet" value="Delete">
                </div>

            </div>
            <div class="col-md-12 pull-left p-0">
                @Html.Action("_OrderDetails", "OrderDetail")
            </div>

        </div>
    </div>


    <div class="col-md-12 pull-left">
        <div class="card">
            <div class="card-body">
                <div class="card-title"><h3>Delivery Address</h3></div>
                @Html.Partial("~/Views/PurchaseOrders/_POShippingDetails.cshtml")
                <div class="col-md-12 order-shipmentinfo-panes">
                    @Html.Partial("~/Views/EmailTemplates/_EmailRecipientsPartial.cshtml")
                </div>
            </div>
        </div>
    </div>

    <div class="bottom-right">
        <input name="commit" type="submit" value="Confirm Order" class="btn btn-primary oAction" />
        <div class="btn btn-default">
            @Html.ActionLink("Back to List", "Index", "PurchaseOrders", null, null, ViewBag.Fragment as string, null, null)
        </div>
    </div>

}

<script>
    $(document).ready(function () {

        $("#btnGenerateNewOrderNumber").on("click", function () {
            generateNextOrderNumber('OrderNumber');
        });

        var gridLinesCount = gridViewOrdDet.cpRowCount;

        formmodified = 0;
        $("form :input").change(function () {
            formmodified = 1;
        });


        window.onbeforeunload = confirmExit;
        function confirmExit() {
            $("#dvbusy").hide();
            if (formmodified === 1) {
                return "New information not saved. Do you wish to leave the page?";
            }
        }
        $("input[name='commit']").click(function () {
            formmodified = 0;
        });
    });
</script>