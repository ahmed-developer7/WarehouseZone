@using Ganedata.Core.Entities.Helpers

@section scripts {

    @Html.DevExpress().GetStyleSheets(
        new StyleSheet { ExtensionType = ExtensionType.GridView, Theme = GaneStaticAppExtensions.DevexTheme }
        )

    @Html.DevExpress().GetScripts(
        new Script { ExtensionType = ExtensionType.GridView }
        )
}

<script type="text/javascript">
    function OnGridFocusedRowChanged(s, e) {
        var name = s.name;
        if (name.indexOf("BlindShipment") >= 0) {
            $('#selkeyBS').val(s.GetRowKey(s.GetFocusedRowIndex()));
        }
    }

    function OnStartCallback(s, e) {
        var department = $(".drpPD").val();
        var group = $(".drpPG").val();
        e.customArgs["ProductDepartment"] = department;
        e.customArgs["ProductGroup"] = group;
    }

</script>

<h2><span>@ViewBag.Title</span></h2>
@Html.Hidden("selkeyBS", null)
@Html.Hidden("blindshipment", true)
@Html.Hidden("UpdateOldProductData", true)
<input value="@ViewBag.type" id="type" style="display:none" />
<div class="col-md-6 p-0 mb-2 pull-left">
    @Html.ValidationSummary(true)
    <div class="input-group h-100 justify-content-center align-items-center">
        @Html.Label("Delivery No", htmlAttributes: new { @class = "col-md-4" })
        <div class="col-md-8">
            @Html.Editor("DeliveryNo", null)
        </div>
    </div>

    <div class="input-group h-100 justify-content-center align-items-center">
        @Html.Label("Account", htmlAttributes: new { @class = "col-md-4" })
        <div class="col-md-8">
            @Html.DropDownList("AccountID", null, "Select Account", new { @class = "chosen-select orderactcnts" })
        </div>
    </div>
    <div class="input-group h-100 justify-content-center align-items-center">
        <label class="col-md-4">Account Address</label>
        <div class="col-md-8">
            @Html.DropDownList("ShipmentAccountAddressId", ViewBag.AccountAddresses as IEnumerable<SelectListItem>, new { @class = "chosen-select form-control", onchange = "BlindShipmentAccount();" })
        </div>

    </div>
    @*<div class="input-group h-100 justify-content-center align-items-center">
            @Html.Label("Enter or scan Account Code", htmlAttributes: new { @class = "col-md-4" })

            <div class="col-md-8">
                @Html.DropDownList("accounts", null, htmlAttributes: new { @class = "chosen-select", @onchange = "BlindShipmentAccount()" })
            </div>
        </div>*@
    <div class="input-group h-100 justify-content-center align-items-center">
        @Html.Label("Product Depratment ", htmlAttributes: new { @class = "col-md-4" })
        <div class="col-md-8">
            <div class="col-11 p-0 mt-1 pull-left">
                @Html.DropDownList("ProductDepartment", ViewBag.Departments as SelectList,"Select Department", new { @class = "chosen-select drpPD", @onchange= "onchangeDepartment()" })
            </div>
            <div class="col-1 p-0 pull-left">
                <a href="javascript:;" onclick="RefreshDepartment(event)" data-target="Department" class="btn btn-primary fa fa-refresh"></a>
            </div>
        </div>


    </div>
    <div class="input-group h-100 justify-content-center align-items-center">
        @Html.Label("Product Group ", htmlAttributes: new { @class = "col-md-4" })
        <div class="col-md-8">

            <div class="col-11 p-0 mt-1 pull-left">

                @Html.DropDownList("ProductGroup", ViewBag.Groups as SelectList,"Select Group", new { @class = "chosen-select drpPG",onchange= "onchangeGroup()" })
                @*  @Html.DropDownList("Group", ViewBag.Groups as SelectList, new { @id = "drpPG", @class = "chosen-select" })*@
            </div>
            <div class="col-1 p-0 pull-left">
                <a href="javascript:;" onclick="RefreshDepartment(event)" data-target="Group" class="btn btn-primary fa fa-refresh"></a>
            </div>



        </div>
    </div>





    <div class="input-group h-100 justify-content-center align-items-center">
        @Html.Label("Enter or scan Product Code", htmlAttributes: new { @class = "col-md-4" })

        <div class="col-md-8">
            @Html.Partial("~/Views/Shared/ProductLargeDataComboBoxPartial.cshtml")
            @*@Html.DropDownList("products", null, htmlAttributes: new { @class = "chosen-select bsDrp" })*@
        </div>
    </div>


    <div class="input-group h-100 justify-content-center align-items-center">
        <label class="col-md-4">New Product?</label>
        <div class="col-md-8">
            @Html.CheckBox("IsNewProduct", new { @onclick = "toggleProductAddForm()" })
        </div>
    </div>

    <div class="col-md-12 p-0" id="divNewProductAddForm" style="display: none">

        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.Label("Product Name", htmlAttributes: new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.TextBox("ProductName", null, new { @class = "form-control" })
            </div>
        </div>
        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.Label("Desc (ID)", htmlAttributes: new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.TextBox("ProductDesc", null, new { @class = "form-control" })
            </div>
        </div>
        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.Label("Department", htmlAttributes: new { @class = "col-md-4" })
            <div class="col-md-8">
                <div class="col-11 p-0 mt-1 pull-left">
                    @Html.DropDownList("DepartmentId", ViewBag.Departments as SelectList,"Select Department", new { @id = "drpPD", @class = "chosen-select" })
                </div>
                <div class="col-1 p-0 pull-left">
                    <input type="button" onclick="javascript: pcModalproductcategory.Show();" id="ProdDepartmentAdd" class="btn btn-primary" value="+">
                </div>
            </div>
        </div>
        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.Label("ProductGroupId", htmlAttributes: new { @class = "col-md-4" })
            <div class="col-md-8">
                <div class="col-11 p-0 mt-1 pull-left">
                    @Html.DropDownList("Group", ViewBag.Groups as SelectList, "Select group", new { @id = "drpPG", @class = "chosen-select" })
                </div>
                <div class="col-1 p-0 pull-left">
                    <input type="button" onclick="showproductgrouppopup()" id="ProdGroupAdd" class="btn btn-primary" value="+">
                </div>
            </div>
        </div>


        @if (ViewBag.ShowTaxInBlindShipment != null && (bool?)ViewBag.ShowTaxInBlindShipment == true)
        {

            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.Label("TaxID", htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownList("TaxIds", ViewBag.GlobalTaxes as SelectList, new { @class = "chosen-select" })

                </div>
            </div>

        }
        @if (ViewBag.ShowQtyInBlindShipment != null && (bool?)ViewBag.ShowQtyInBlindShipment == true)
        {
            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.Label("Quantity", htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.TextBox("Quantity", null, new { @class = "form-control", type = "number" })

                </div>
            </div>
        }
        @if (ViewBag.ShowPriceInBlindShipment != null && (bool?)ViewBag.ShowPriceInBlindShipment == true)
        {
            <div class="input-group h-100 justify-content-center align-items-center">
                <label class="col-md-4">Price</label>
                <div class="col-md-8">
                    @Html.Editor("PriceShipment", null, new { @class = "form-control", @type = "number" })
                </div>
            </div>
        }


        <div class="input-group h-100 justify-content-center">
            <div class="col-md-10"></div>
            <button class="btn btn-primary" onclick="CreateProduct();">Create </button>
        </div>


    </div>
    @*@if (ViewBag.delivery != null && ViewBag.delivery == true)
        {
            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(m => m.ConsignmentTypeId, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownListFor(m => m.ConsignmentTypeId, ViewBag.Consignments as SelectList, "Select Consignment Type", new { @class = "chosen-select form-control" })
                </div>
            </div>
        }*@

</div>


<div class="col-md-6 p-0 pull-left" id="divCustomShipmentAddress">
    <div class="input-group h-100 justify-content-center align-items-center">
        @Html.Label("FSC", htmlAttributes: new { @class = "col-md-4" })
        <div class="col-md-8">
            @Html.TextBox("FSC", "", new { @class = "form-control prodFSC", @placeholder = "FSC" })

        </div>
    </div>
    <div class="input-group h-100 justify-content-center align-items-center">
        @Html.Label("PEFC", htmlAttributes: new { @class = "col-md-4" })
        <div class="col-md-8">
            @Html.TextBox("PEFC", "", new { @class = "form-control prodPEFC", @placeholder = "PEFC" })


        </div>
    </div>
    <div class="input-group h-100 justify-content-center align-items-center">
        <label class="col-md-4">Shipment Address Line 1</label>
        <div class="col-md-8">
            @Html.TextBox("ShipmentAddressLine1", "", new { placeholder = "Address Line1", @class = "form-control" })

        </div>
    </div>
    <div class="input-group h-100 justify-content-center align-items-center">
        @Html.Label("Shipment Address Line 2", htmlAttributes: new { @class = "col-md-4" })
        <div class="col-md-8">
            @Html.TextBox("ShipmentAddressLine2", "", new { placeholder = "Address Line2", @class = "form-control" })
        </div>
    </div>
    <div class="input-group h-100 justify-content-center align-items-center">
        @Html.Label("Shipment Address Line 3", htmlAttributes: new { @class = "col-md-4" })
        <div class="col-md-8">
            @Html.TextBox("ShipmentAddressLine3", "", new { placeholder = "Address Line3", @class = "form-control" })

        </div>
    </div>
    <div class="input-group h-100 justify-content-center align-items-center">
        @Html.Label("Shipment Address Line 4", htmlAttributes: new { @class = "col-md-4" })
        <div class="col-md-8">
            @Html.TextBox("ShipmentAddressLine4", "", new { placeholder = "Address Line4", @class = "form-control" })

        </div>
    </div>
    <div class="input-group h-100 justify-content-center align-items-center">
        @Html.Label("Shipment Address Postcode", htmlAttributes: new { @class = "col-md-4" })
        <div class="col-md-8">
            @Html.TextBox("ShipmentAddressPostcode", "", new { placeholder = "Postcode", @class = "form-control" })

        </div>
    </div>

</div>
@Html.Action("_BSList")
<div class="bottom-right">
    <input type="button" name="commit" style="width:100px" onclick="BSConfirm()" class="btn btn-primary" value="Confirm">
</div>

<script>
    $(document).ready(function () {

        formmodified = 0;
        $("input, select").change(function () {
            formmodified = 1;
        });

        window.onbeforeunload = confirmExit;
        function confirmExit() {
            $("#dvbusy").hide();
            if (formmodified == 1) {
                return "New information not saved. Do you wish to leave the page?";
            }
        }
    });
</script>


