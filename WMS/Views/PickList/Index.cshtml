@using Ganedata.Core.Entities.Helpers

@section scripts {

    @Html.DevExpress().GetStyleSheets(
        new StyleSheet { ExtensionType = ExtensionType.GridView, Theme = GaneStaticAppExtensions.DevexTheme }
        )

    @Html.DevExpress().GetScripts(
        new Script { ExtensionType = ExtensionType.GridView }
        )
}

@{
    ViewBag.Title = "Pick List";
}

<h2><span>Pick List</span></h2>

<script type="text/javascript">
    var OnBeginCallbackPicklistFilter = function (s, e) {
        e.customArgs["id"] = PickListDate.GetFormattedText("dd/MM/yyyy");
    }
</script>

<div>
    <div class="col-md-12 p-0 legend-pane">
        @IconHelpers.Get("largebox.png", "Full Shipable")
        @IconHelpers.Get("smallbox.png", "Partial Shipable")
        @IconHelpers.Get("r-orange.png", "Shipment address missing")
        @IconHelpers.Get("stop-red.png", "Account Stop")
        @IconHelpers.Get("hold-orange.png", "Account On Hold")
        @IconHelpers.Get("r-credit.png", "Exceeds Credit Limit")

        @if (ViewBag.IsWorksOrdersEnabled!=null)
        {
            @IconHelpers.Get("works-order-icon.png", "Works Order")
        }

        @IconHelpers.Get("sales-order-icon.png", "Sales Orders")
        @IconHelpers.Get("sample-order-icon.png", "Sample Orders")
        @IconHelpers.Get("loan-order-icon.png", "Loan Orders")
        <div class="clearfix"></div>
    </div>

    <div class="col-md-12 report-date-header">
        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.Label("Select Date", htmlAttributes: new { @class = "col-md-2" })
            <div class ="col-md-4 text-center pull-left">
                @Html.DevExpress().DateEdit(settings =>
           {
               settings.Name = "PickListDate";
               settings.Properties.NullText = "Select date...";
               settings.Properties.DisplayFormatString = "dd/MM/yyyy";
               settings.ClientVisible = true;
               settings.Properties.ClientSideEvents.DateChanged = "function(s, e) { _PendingListGridView.Refresh(); }";
               settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
               settings.ControlStyle.CssClass = "form-control";
               settings.Properties.ClientSideEvents.GotFocus = "function(s, e) { s.ShowDropDown(); }";
           }).Bind(DateTime.UtcNow).GetHtml()
            </div>
            <a id="linkDisplayTodaysResults" class="btn btn-primary">Today's Orders</a>
            <a id="linkDisplayAllResults" class="btn btn-primary">All</a>
        </div>
    </div>

    @Html.Action("_PendingProcessList", "Order")

</div>
<script>
    $("#linkDisplayAllResults").on("click", function () {
        PickListDate.SetValue(null);
        _PendingListGridView.Refresh();
    });
    $("#linkDisplayTodaysResults").on("click", function () {
        PickListDate.SetValue(new Date());
        _PendingListGridView.Refresh();
    });
</script>