@model Ganedata.Core.Entities.Domain.PProperty
@using Ganedata.Core.Entities.Helpers

@section scripts {

    @Html.DevExpress().GetStyleSheets(
        new StyleSheet { ExtensionType = ExtensionType.GridView, Theme = GaneStaticAppExtensions.DevexTheme },
        new StyleSheet { ExtensionType = ExtensionType.PopupControl, Theme = GaneStaticAppExtensions.DevexTheme },
        new StyleSheet { ExtensionType = ExtensionType.SpinEdit, Theme = GaneStaticAppExtensions.DevexTheme },
        new StyleSheet { ExtensionType = ExtensionType.DateEdit, Theme = GaneStaticAppExtensions.DevexTheme }
        )

    @Html.DevExpress().GetScripts(
        new Script { ExtensionType = ExtensionType.GridView },
        new Script { ExtensionType = ExtensionType.PopupControl },
        new Script { ExtensionType = ExtensionType.SpinEdit },
        new Script { ExtensionType = ExtensionType.DateEdit }
        )
}

@{
    ViewBag.Title = "Edit";
}

<h2><span>Edit Property</span></h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.Hidden("SiteId", 100)

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.PPropertyId)

    <div class="col-md-6">
        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.LabelFor(model => model.PropertyCode, htmlAttributes: new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.PropertyCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PropertyCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.LabelFor(model => model.AddressLine1, htmlAttributes: new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AddressLine1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.LabelFor(model => model.AddressLine2, htmlAttributes: new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.AddressLine2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AddressLine2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.LabelFor(model => model.AddressLine3, htmlAttributes: new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.AddressLine3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AddressLine3, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.LabelFor(model => model.AddressLine4, htmlAttributes: new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.AddressLine4, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AddressLine4, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.LabelFor(model => model.AddressLine5, htmlAttributes: new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.AddressLine5, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AddressLine5, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.LabelFor(model => model.AddressPostcode, htmlAttributes: new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.AddressPostcode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AddressPostcode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.LabelFor(model => model.PropertyBranch, htmlAttributes: new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.PropertyBranch, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PropertyBranch, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.LabelFor(model => model.CurrentLandlordId, htmlAttributes: new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.DropDownList("CurrentLandlordId", null, String.Empty, new { @class = "form-control chosen-select" })

                @Html.ValidationMessageFor(model => model.CurrentLandlordId, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>

            <div class="col-md-12">

                <h2><span>Property Tenants</span></h2>
                <div class="col-md-12 p-0">
                    @Html.Action("PTenantsGridview", "PTenants", new { id = Model.PPropertyId })
                </div>

            </div>


            <div class="col-md-offset-2 col-md-10 bottom-right">
                <input type="submit" value="Save" class="btn btn-primary" />
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
            </div>
}