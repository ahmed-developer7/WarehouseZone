@model Ganedata.Core.Entities.Domain.AuthUser
@using Ganedata.Core.Entities.Helpers

@section scripts {

    @Html.DevExpress().GetStyleSheets(
        new StyleSheet { ExtensionType = ExtensionType.SpinEdit, Theme = GaneStaticAppExtensions.DevexTheme },
        new StyleSheet { ExtensionType = ExtensionType.DateEdit, Theme = GaneStaticAppExtensions.DevexTheme }
        )

    @Html.DevExpress().GetScripts(
        new Script { ExtensionType = ExtensionType.SpinEdit },
        new Script { ExtensionType = ExtensionType.DateEdit }
        )
}

@{
    ViewBag.Title = "Edit User";
}

<h2><span>Edit User</span></h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal col-md-6 pull-left">
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.UserId)

        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.LabelFor(model => model.UserName, new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.DisplayTextFor(model => model.UserName)
                @Html.HiddenFor(model => model.UserName)
                @Html.ValidationMessageFor(model => model.UserName)
            </div>
        </div>

        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.LabelFor(model => model.UserPassword, new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.PasswordFor(model => model.UserPassword)
                @Html.ValidationMessageFor(model => model.UserPassword)
            </div>
        </div>

        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.LabelFor(model => model.UserFirstName, new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.UserFirstName)
                @Html.ValidationMessageFor(model => model.UserFirstName)
            </div>
        </div>

        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.LabelFor(model => model.UserLastName, new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.UserLastName)
                @Html.ValidationMessageFor(model => model.UserLastName)
            </div>
        </div>

        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.LabelFor(model => model.UserEmail, new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.UserEmail)
                @Html.ValidationMessageFor(model => model.UserEmail)
            </div>
        </div>

        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.LabelFor(model => model.IsActive, new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive)
            </div>
        </div>
        <div class="input-group h-100 justify-content-center align-items-center">
            <div class="col-md-offset-2 col-md-10 bottom-right">
                <input type="submit" value="Save" class="btn btn-primary" />
                <div class="btn btn-default"> @Html.ActionLink("Back to List", "Index")</div>
            </div>
        </div>
    </div>
}
