@model Ganedata.Core.Entities.Domain.AuthActivity
@using Ganedata.Core.Entities.Helpers

@section scripts {

    @Html.DevExpress().GetStyleSheets(
        new StyleSheet { ExtensionType = ExtensionType.SpinEdit, Theme = GaneStaticAppExtensions.DevexTheme },
        new StyleSheet { ExtensionType = ExtensionType.DateEdit, Theme = GaneStaticAppExtensions.DevexTheme }
        )

    @Html.DevExpress().GetScripts(
        new Script { ExtensionType = ExtensionType.SpinEdit },
        new Script { ExtensionType = ExtensionType.DateEdit }
        )
}

@{
    ViewBag.Title = "Create Activity";
}

<h2><span>Create Activity</span></h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal col-md-6 pull-left">
        @Html.ValidationSummary(true)

        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.LabelFor(model => model.ActivityName, new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.ActivityName)
                @Html.ValidationMessageFor(model => model.ActivityName)
            </div>
        </div>

        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.LabelFor(model => model.ActivityController, new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.ActivityController)
                @Html.ValidationMessageFor(model => model.ActivityController)
            </div>
        </div>

        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.LabelFor(model => model.ActivityAction, new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.ActivityAction)
                @Html.ValidationMessageFor(model => model.ActivityAction)
            </div>
        </div>


        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.LabelFor(model => model.IsActive, new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive)
            </div>
        </div>

        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.LabelFor(model => model.ExcludePermission, new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.ExcludePermission)
                @Html.ValidationMessageFor(model => model.ExcludePermission)
            </div>
        </div>

        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.LabelFor(model => model.RightNav, new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.RightNav)
                @Html.ValidationMessageFor(model => model.RightNav)
            </div>
        </div>
    </div>

    <div class="input-group h-100 justify-content-center align-items-center">
        <div class="col-md-offset-2 col-md-10 bottom-right">
            <input type="submit" value="Create" class="btn btn-primary" />
            <div class="back-list">@Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })</div>  
        </div>
    </div>
}
