@using System.Web.UI.WebControls
@Html.DevExpress().PopupControl(
    settings =>
    {
        settings.Name = "ModelOrdDetail";
        settings.LoadContentViaCallback = LoadContentViaCallback.OnFirstShow;
        settings.CallbackRouteValues = new { Controller = "OrderDetail", Action = "_OrderDetail"};


        settings.Width = 800;
        settings.Height = 500;
        settings.AllowDragging = true;
        settings.CloseAction = CloseAction.CloseButton;
        settings.CloseOnEscape = true;
        settings.PopupAnimationType = DevExpress.Web.AnimationType.None;
        settings.ShowHeader = false;
        settings.Modal = true;
        settings.AutoUpdatePosition = true;
        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.ScrollBars = System.Web.UI.WebControls.ScrollBars.Vertical;
        settings.EnableClientSideAPI = true;
        settings.ClientSideEvents.BeginCallback = "function(s,e){ beginorderDetCallBack(s,e); }";
        settings.ClientSideEvents.EndCallback = "endOrderDetailCallback";

//settings.ClientSideEvents.CloseUp = "function(s, e){ ASPxClientEdit.ClearEditorsInContainer(null, '', true); }";
}).GetHtml()

@Html.DevExpress().PopupControl(
    settings =>
    {
        settings.Name = "ModelAddSerial";
        settings.LoadContentViaCallback = LoadContentViaCallback.OnFirstShow;
        settings.CallbackRouteValues = new { Controller = "Order", Action = "_AddSerial", Method = "GET" };
        settings.Width = 700;
        settings.Height = 500;
        settings.AllowDragging = true;
        settings.CloseAction = CloseAction.CloseButton;
        settings.CloseOnEscape = true;
        settings.PopupAnimationType = DevExpress.Web.AnimationType.None;
        settings.ShowHeader = true;
        settings.HeaderText = "Process Serials";
        settings.Modal = true;
        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.ScrollBars = System.Web.UI.WebControls.ScrollBars.Vertical;
        settings.EnableClientSideAPI = true;

        settings.ClientSideEvents.BeginCallback = "beginAddSeriesCallBack";
        settings.ClientSideEvents.EndCallback = "function(s,e){ initialiseSeriesGenerateActions(s,e);}";

//settings.ClientSideEvents.CloseUp = "function(s, e){ ASPxClientEdit.ClearEditorsInContainer(null, '', true); }";
}).GetHtml()


@Html.DevExpress().PopupControl(
    settings =>
    {
        settings.Name = "ModelAddPallete";
        settings.LoadContentViaCallback = LoadContentViaCallback.OnFirstShow;
        settings.CallbackRouteValues = new { Controller = "PurchaseOrders", Action = "_AddPalletes", Method = "GET" };
        settings.Width = 700;
        settings.Height = 500;
        settings.AllowDragging = true;
        //settings.CloseAction = CloseAction.CloseButton;
        settings.CloseOnEscape = true;
        settings.PopupAnimationType = DevExpress.Web.AnimationType.None;
        settings.ShowHeader = true;
        settings.HeaderText = "Scan Pallet";
        settings.Modal = true;
        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.ScrollBars = System.Web.UI.WebControls.ScrollBars.Vertical;
        settings.EnableClientSideAPI = true;

        settings.ClientSideEvents.BeginCallback = "beginAddSeriesCallBackPalletes";
       // settings.ClientSideEvents.EndCallback = "function(s,e){ initial(s,e);}";

        //settings.ClientSideEvents.CloseUp = "function(s, e){ ASPxClientEdit.ClearEditorsInContainer(null, '', true); }";
    }).GetHtml()

@Html.DevExpress().PopupControl(
    settings =>
    {
        settings.Name = "ModelRecProduct";
        settings.LoadContentViaCallback = LoadContentViaCallback.OnFirstShow;
        settings.CallbackRouteValues = new { Controller = "Order", Action = "_RecProduct", Method = "GET" };
        settings.Width = 600;
        settings.Height = 500;
        settings.AllowDragging = true;
        settings.CloseAction = CloseAction.CloseButton;
        settings.CloseOnEscape = true;
        settings.PopupAnimationType = DevExpress.Web.AnimationType.None;
        settings.ShowHeader = false;
        settings.Modal = true;
        settings.AutoUpdatePosition = true;
        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.ScrollBars = ScrollBars.Vertical;
        settings.EnableClientSideAPI = true;

        settings.ClientSideEvents.BeginCallback = "beginAddSeriesCallBack";
        settings.ClientSideEvents.EndCallback = "function(s,e){ loadOrderDetailProcessPickEvents(); }";
        settings.ClientSideEvents.CloseUp = "function(s, e){ RefreshOrderDetailGrids(); }";
    }).GetHtml()

@Html.DevExpress().PopupControl(
    settings =>
    {
        settings.Name = "ModelProcessProduct";
        settings.LoadContentViaCallback = LoadContentViaCallback.OnFirstShow;
        settings.CallbackRouteValues = new { Controller = "SalesOrders", Action = "_ProcessProduct", Method = "GET" };
        settings.Width = 500;
        settings.Height = 500;
        settings.AllowDragging = true;
        settings.CloseAction = CloseAction.CloseButton;
        settings.CloseOnEscape = true;
        settings.PopupAnimationType = DevExpress.Web.AnimationType.None;
        settings.ShowHeader = false;
        settings.Modal = true;
        settings.AutoUpdatePosition = true;
        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.ScrollBars = System.Web.UI.WebControls.ScrollBars.Vertical;
        settings.EnableClientSideAPI = true;
        settings.ClientSideEvents.BeginCallback = "beginAddSeriesCallBack";
//settings.ClientSideEvents.CloseUp = "function(s, e){ ASPxClientEdit.ClearEditorsInContainer(null, '', true); }";

}).GetHtml()

@Html.DevExpress().PopupControl(
    settings =>
    {
        settings.Name = "ModelPriceHistory";
        settings.LoadContentViaCallback = LoadContentViaCallback.OnFirstShow;
        settings.CallbackRouteValues = new { Controller = "Order", Action = "_PriceHistory", Method = "GET" };
        settings.Width = 500;
        settings.Height = 300;
        settings.AllowDragging = true;
        settings.CloseAction = CloseAction.CloseButton;
        settings.CloseOnEscape = true;
        settings.PopupAnimationType = DevExpress.Web.AnimationType.None;
        settings.ShowHeader = false;
        settings.Modal = true;
        settings.AutoUpdatePosition = true;
        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.ScrollBars = System.Web.UI.WebControls.ScrollBars.Vertical;
        settings.EnableClientSideAPI = true;
        settings.ClientSideEvents.BeginCallback = "beginPriceHistoryCallBack";

    }).GetHtml()

@Html.DevExpress().PopupControl(
    settings =>
    {
        settings.Name = "ModelProperty";
        settings.LoadContentViaCallback = LoadContentViaCallback.OnFirstShow;
        settings.CallbackRouteValues = new { Controller = "WorksOrders", Action = "_Property", Method = "GET" };
        settings.Width = 800;
        settings.Height = 600;
        settings.AllowDragging = true;
        settings.CloseAction = CloseAction.CloseButton;
        settings.CloseOnEscape = true;
        settings.PopupAnimationType = DevExpress.Web.AnimationType.None;
        settings.ShowHeader = false;
        settings.Modal = true;
        settings.AutoUpdatePosition = true;
        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.ScrollBars = System.Web.UI.WebControls.ScrollBars.Vertical;
        settings.EnableClientSideAPI = true;


    }).GetHtml()

@Html.DevExpress().PopupControl(
    settings =>
    {
        settings.Name = "ModelLandlord";
        settings.LoadContentViaCallback = LoadContentViaCallback.OnFirstShow;
        settings.CallbackRouteValues = new { Controller = "WorksOrders", Action = "_Landlord", Method = "GET" };
        settings.Width = 800;
        settings.Height = 600;
        settings.AllowDragging = true;
        settings.CloseAction = CloseAction.CloseButton;
        settings.CloseOnEscape = true;
        settings.PopupAnimationType = DevExpress.Web.AnimationType.None;
        settings.ShowHeader = false;
        settings.Modal = true;
        settings.AutoUpdatePosition = true;
        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.ScrollBars = System.Web.UI.WebControls.ScrollBars.Vertical;
        settings.EnableClientSideAPI = true;

    }).GetHtml()
@Html.DevExpress().PopupControl(
    settings =>
    {
        settings.Name = "ModelPTenent";
        settings.LoadContentViaCallback = LoadContentViaCallback.OnFirstShow;
        settings.CallbackRouteValues = new { Controller = "WorksOrders", Action = "_PTenent", Method = "GET" };
        settings.Width = 800;
        settings.Height = 600;
        settings.AllowDragging = true;
        settings.CloseAction = CloseAction.CloseButton;
        settings.CloseOnEscape = true;
        settings.PopupAnimationType = DevExpress.Web.AnimationType.None;
        settings.ShowHeader = false;
        settings.Modal = true;
        settings.AutoUpdatePosition = true;
        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.ScrollBars = System.Web.UI.WebControls.ScrollBars.Vertical;
        settings.EnableClientSideAPI = true;

    }).GetHtml()
@Html.DevExpress().PopupControl(
    settings =>
    {
        settings.Name = "ModalPopupAddPalletItem";
        settings.LoadContentViaCallback = LoadContentViaCallback.OnFirstShow;
        settings.CallbackRouteValues = new { Controller = "Pallets", Action = "_AddOrderItemsToPallet", Method = "GET" };
        settings.Width = 500;
        settings.Height = 300;
        settings.AllowDragging = true;
        settings.CloseAction = CloseAction.CloseButton;
        settings.CloseOnEscape = true;
        settings.PopupAnimationType = DevExpress.Web.AnimationType.None;
        settings.ShowHeader = false;
        settings.ClientSideEvents.BeginCallback = "function(s,e){ Gane.Pallets.OnBeginCallbackPalletItem(s,e); }";
        settings.Modal = true;
        settings.AutoUpdatePosition = true;
        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.ScrollBars = System.Web.UI.WebControls.ScrollBars.Auto;
        settings.EnableClientSideAPI = true;

    }).GetHtml()
@Html.DevExpress().PopupControl(
    settings =>
    {
        settings.Name = "ModelOrderNotes";
        settings.LoadContentViaCallback = LoadContentViaCallback.OnFirstShow;
        settings.CallbackRouteValues = new { Controller = "Order", Action = "_OrderNotes", Method = "GET" };
        settings.ClientSideEvents.BeginCallback = "function(s,e){ var orderId = $('#OrderID').val(); if(location.href.indexOf('BulkOrder')>0){ if(!ModelWorksOrderSingleEdit.GetVisible()){ orderId=null;} }  e.customArgs['OrderID'] =orderId;   e.customArgs['pageSessionToken'] = sessionStorage['PageSessionToken']; }";
        settings.Width = 800;
        settings.Height = 600;
        settings.AllowDragging = true;
        settings.CloseAction = CloseAction.CloseButton;
        settings.CloseOnEscape = true;
        settings.PopupAnimationType = DevExpress.Web.AnimationType.None;
        settings.ShowHeader = false;
        settings.Modal = true;
        settings.AutoUpdatePosition = true;
        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.ScrollBars = System.Web.UI.WebControls.ScrollBars.Vertical;
        settings.EnableClientSideAPI = true;

    }).GetHtml()

@Html.DevExpress().PopupControl(
    settings =>
    {
        settings.Name = "ModelWorksOrderSingle";
        settings.LoadContentViaCallback = LoadContentViaCallback.OnFirstShow;
        settings.CallbackRouteValues = new { Controller = "WorksOrders", Action = "CreateBulkSingle", Method = "GET" };
        settings.Width = 1200;
        settings.Height = 550;
        settings.AllowDragging = true;
        settings.CloseAction = CloseAction.CloseButton;
        settings.CloseOnEscape = true;
        settings.PopupAnimationType = DevExpress.Web.AnimationType.None;
        settings.ShowHeader = false;
        settings.Modal = true;
        settings.AutoUpdatePosition = true;
        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.ScrollBars = System.Web.UI.WebControls.ScrollBars.Vertical;
        settings.EnableClientSideAPI = true;
        settings.ClientSideEvents.EndCallback = "function(s,e){ loadOrderDetailsEvents();loadOrderDetailCommonEvents(); WorksOrderBulkGUID(); }";
        settings.ClientSideEvents.CloseUp = "function(s, e){ WorksOrderBulkCreatedListGridView.Refresh(); }";

    }).GetHtml()
@Html.DevExpress().PopupControl(
    settings =>
    {
        settings.Name = "ModelWorksOrderSingleEdit";
        settings.LoadContentViaCallback = LoadContentViaCallback.OnFirstShow;
        settings.CallbackRouteValues = new { Controller = "WorksOrders", Action = "EditBulkSingle", Method = "GET" };
        settings.Width = 1200;
        settings.Height = 550;
        settings.AllowDragging = true;
        settings.CloseAction = CloseAction.CloseButton;
        settings.CloseOnEscape = true;
        settings.PopupAnimationType = DevExpress.Web.AnimationType.None;
        settings.ShowHeader = false;
        settings.Modal = true;
        settings.AutoUpdatePosition = true;
        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.ScrollBars = System.Web.UI.WebControls.ScrollBars.Vertical;
        settings.EnableClientSideAPI = true;
        settings.ClientSideEvents.EndCallback = "function(s,e){ loadOrderDetailsEvents();loadOrderDetailCommonEvents(); }";
        settings.ClientSideEvents.BeginCallback = "function(s,e){ OnBeginCallbackEditSingleOrder(s,e); WorksOrderBulkGUID(e); }";
        settings.ClientSideEvents.CloseUp = "function(s, e){ WorksOrderBulkCreatedListGridView.Refresh();  }";

    }).GetHtml()

@Html.DevExpress().PopupControl(
    settings =>
    {
        settings.Name = "ModalEditAccountTransaction";
        settings.LoadContentViaCallback = LoadContentViaCallback.OnFirstShow;
        settings.CallbackRouteValues = new { Controller = "Finances", Action = "_AccountTransactionsForm", Method = "GET" };
        settings.Width = 600;
        settings.Height = 400;
        settings.AllowDragging = true;
        settings.CloseAction = CloseAction.CloseButton;
        settings.CloseOnEscape = true;
        settings.PopupAnimationType = AnimationType.None;
        settings.ShowHeader = false;
        settings.Modal = true;
        settings.AutoUpdatePosition = true;
        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.ScrollBars = System.Web.UI.WebControls.ScrollBars.Vertical;
        settings.EnableClientSideAPI = true;
        settings.ClientSideEvents.BeginCallback = "function(s,e){ OnBeginCallbackEditAccountTransaction(s,e); }";
        settings.ClientSideEvents.CloseUp = "function(s, e){ RefreshAccountTransactions(); }";

    }).GetHtml()


@Html.DevExpress().PopupControl(
    settings =>
    {
        settings.Name = "ModalEditProductSpecialPrice";
        settings.LoadContentViaCallback = LoadContentViaCallback.OnFirstShow;
        settings.CallbackRouteValues = new { Controller = "ProductSpecialPrice", Action = "_ProductSpecialPricesForm", Method = "GET" };
        settings.Width = 1200;
        settings.Height = 380;
        settings.AllowDragging = true;
        settings.CloseAction = CloseAction.CloseButton;
        settings.CloseOnEscape = true;
        settings.PopupAnimationType = DevExpress.Web.AnimationType.None;
        settings.ShowHeader = false;
        settings.Modal = true;
        settings.AutoUpdatePosition = true;
        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.ScrollBars = System.Web.UI.WebControls.ScrollBars.Vertical;
        settings.EnableClientSideAPI = true;
        settings.ClientSideEvents.BeginCallback = "function(s,e){ OnBeginCallbackSpecialPrice(s,e); }";
        settings.ClientSideEvents.CloseUp = "function(s, e){ RefreshProductSpecialPrices(); }";

    }).GetHtml()



@Html.DevExpress().PopupControl(
    settings =>
    {
        settings.Name = "ModalEditPriceGroup";
        settings.LoadContentViaCallback = LoadContentViaCallback.OnFirstShow;
        settings.CallbackRouteValues = new { Controller = "ProductSpecialPrice", Action = "_PriceGroupForm", Method = "GET" };
        settings.Width = 600;
        settings.Height = 400;
        settings.AllowDragging = true;
        settings.CloseAction = CloseAction.CloseButton;
        settings.CloseOnEscape = true;
        settings.PopupAnimationType = DevExpress.Web.AnimationType.None;
        settings.ShowHeader = false;
        settings.Modal = true;
        settings.AutoUpdatePosition = true;
        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.ScrollBars = System.Web.UI.WebControls.ScrollBars.Vertical;
        settings.EnableClientSideAPI = true;
        settings.ClientSideEvents.BeginCallback = "function(s,e){ OnBeginCallbackPriceGroup(s,e); }";

    }).GetHtml()

@Html.DevExpress().PopupControl(
    settings =>
    {
        settings.Name = "ModalPopupAllocateMarketJob";
        settings.LoadContentViaCallback = LoadContentViaCallback.OnFirstShow;
        settings.CallbackRouteValues = new { Controller = "Markets", Action ="_AllocateMarketJobPartial", Method = "GET" };
        settings.Width = 700;
        settings.Height = 250;
        settings.AllowDragging = true;
        settings.CloseAction = CloseAction.CloseButton;
        settings.CloseOnEscape = true;
        settings.PopupAnimationType = DevExpress.Web.AnimationType.None;
        settings.ShowHeader = true;
        settings.HeaderText = "Allocate Jobs";
        settings.ClientSideEvents.BeginCallback = "function(s,e){ OnJobAllocationBegincallBack(s,e); }";
        settings.Modal = true;
        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.ScrollBars = ScrollBars.None;
        settings.EnableClientSideAPI = true;

    }).GetHtml()

@Html.DevExpress().PopupControl(
    settings =>
    {
        settings.Name = "ModalPopupCustomEmail";
        settings.LoadContentViaCallback = LoadContentViaCallback.OnFirstShow;
        settings.CallbackRouteValues = new { Controller = "SalesOrders", Action = "_EmailRecipientsPartial", Method = "GET" };
        settings.Width = 750;
        settings.Height = 500;
        settings.AllowDragging = true;
        settings.CloseAction = CloseAction.CloseButton;
        settings.CloseOnEscape = true;
        settings.PopupAnimationType = DevExpress.Web.AnimationType.None;
        settings.ShowHeader = false;
        settings.Modal = true;
        settings.AutoUpdatePosition = true;
        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.ScrollBars = ScrollBars.Vertical;
        settings.EnableClientSideAPI = true;

        settings.ClientSideEvents.BeginCallback = "beginAddCustomEmailPopup";
        //settings.ClientSideEvents.EndCallback = "SetContactEmail";
        //settings.ClientSideEvents.CloseUp = "function(s, e){ RefreshOrderDetailGrids(); }";
    }).GetHtml()


@Html.DevExpress().PopupControl(
    settings =>
    {
        settings.Name = "ModelAdjustmentInformation";
        settings.LoadContentViaCallback = LoadContentViaCallback.OnFirstShow;
        settings.CallbackRouteValues = new { Controller = "InventoryStocks", Action = "AdjustmentDetail", Method = "GET" };
        settings.Width = 700;
        settings.Height = 500;
        settings.AllowDragging = true;
        settings.CloseAction = CloseAction.CloseButton;
        settings.CloseOnEscape = true;
        settings.PopupAnimationType = DevExpress.Web.AnimationType.None;
        settings.ShowHeader = true;
        settings.HeaderText = "Orders Detail ";
        settings.Modal = true;
        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.ScrollBars = System.Web.UI.WebControls.ScrollBars.Vertical;
        settings.EnableClientSideAPI = true;

        settings.ClientSideEvents.BeginCallback = "beginAddAdjustmentCallBack";
        //settings.ClientSideEvents.EndCallback = "function(s,e){ initialiseSeriesGenerateActions(s,e);}";

        //settings.ClientSideEvents.CloseUp = "function(s, e){ ASPxClientEdit.ClearEditorsInContainer(null, '', true); }";
    }).GetHtml()
@Html.DevExpress().PopupControl(
    settings =>
    {
        settings.Name = "ModalPopupEditDelivery";
        settings.LoadContentViaCallback = LoadContentViaCallback.OnFirstShow;
        settings.CallbackRouteValues = new { Controller = "SalesOrders", Action = "_EditDelivery", Method = "GET" };
        settings.Width = 600;
        settings.Height = 400;
        settings.AllowDragging = true;
        settings.CloseAction = CloseAction.CloseButton;
        settings.CloseOnEscape = true;
        settings.PopupAnimationType = DevExpress.Web.AnimationType.None;
        settings.ShowHeader = false;
        settings.Modal = true;
        settings.AutoUpdatePosition = true;
        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.ScrollBars = ScrollBars.Vertical;
        settings.EnableClientSideAPI = true;

        settings.ClientSideEvents.BeginCallback = "BeginEditDliveryPopUp";
        //settings.ClientSideEvents.EndCallback = "SetContactEmail";
        //settings.ClientSideEvents.CloseUp = "function(s, e){ RefreshOrderDetailGrids(); }";
    }).GetHtml()



@Html.DevExpress().PopupControl(
    settings =>
    {
        settings.Name = "ModalPopupEditInventory";
        settings.LoadContentViaCallback = LoadContentViaCallback.OnFirstShow;
        settings.CallbackRouteValues = new { Controller = "SalesOrders", Action = "InventoryTransactionEdit", Method = "GET" };
        settings.Width = 1000;
        settings.Height = 500;
        settings.AllowDragging = true;
        settings.CloseAction = CloseAction.CloseButton;
        settings.ShowCloseButton = true;
        settings.CloseOnEscape = true;
        settings.PopupAnimationType = DevExpress.Web.AnimationType.None;
        settings.ShowHeader = true;
        settings.HeaderText = "Edit Order Process";
        settings.Modal = true;
        settings.AutoUpdatePosition = true;
        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.ScrollBars = ScrollBars.Vertical;
        settings.EnableClientSideAPI = true;

        settings.ClientSideEvents.BeginCallback = "InventoryTransactionBeginCallBack";
        //settings.ClientSideEvents.EndCallback = "SetContactEmail";
        //settings.ClientSideEvents.CloseUp = "function(s, e){ RefreshOrderDetailGrids(); }";
    }).GetHtml()


@Html.DevExpress().PopupControl(
    settings =>
    {
        settings.Name = "ModalPopupEditSerializedProduct";
        settings.LoadContentViaCallback = LoadContentViaCallback.OnFirstShow;
        settings.CallbackRouteValues = new { Controller = "SalesOrders", Action = "EditSerialProduct", Method = "GET" };
        settings.Width = 1000;
        settings.Height = 700;
        settings.AllowDragging = true;
        settings.CloseAction = CloseAction.CloseButton;
        settings.ShowCloseButton = true;
        settings.CloseOnEscape = true;
        settings.PopupAnimationType = DevExpress.Web.AnimationType.None;
        settings.ShowHeader = true;
        settings.HeaderText = "Edit Order Process";
        settings.Modal = true;
        settings.AutoUpdatePosition = true;
        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.ScrollBars = ScrollBars.Vertical;
        settings.EnableClientSideAPI = true;

        settings.ClientSideEvents.BeginCallback = "InventoryTransactionBeginCallBack";
        //settings.ClientSideEvents.EndCallback = "SetContactEmail";
        //settings.ClientSideEvents.CloseUp = "function(s, e){ RefreshOrderDetailGrids(); }";
    }).GetHtml()




@Html.DevExpress().PopupControl(
    settings =>
    {
        settings.Name = "ModalPopupProductPrice";
        settings.LoadContentViaCallback = LoadContentViaCallback.OnFirstShow;
        settings.CallbackRouteValues = new { Controller = "TenantDataImport", Action = "ImportProductPriceCsv", Method = "GET" };
        settings.Width = 800;
        settings.Height = 600;
        settings.AllowDragging = true;
        settings.CloseAction = CloseAction.CloseButton;
        settings.CloseOnEscape = true;
        settings.PopupAnimationType = DevExpress.Web.AnimationType.None;
        settings.ShowHeader = false;
        settings.Modal = true;
        settings.AutoUpdatePosition = true;
        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.ScrollBars = System.Web.UI.WebControls.ScrollBars.Vertical;
        settings.EnableClientSideAPI = true;

    }).GetHtml()

@Html.DevExpress().PopupControl(
    settings =>
    {
        settings.Name = "ModelChequeDetail";
        settings.LoadContentViaCallback = LoadContentViaCallback.OnFirstShow;
        settings.CallbackRouteValues = new { Controller = "Finances", Action = "ChequeDetail", Method = "GET" };
        settings.Width = 400;
        settings.Height = 400;
        settings.AllowDragging = true;
        settings.CloseAction = CloseAction.CloseButton;
        settings.CloseOnEscape = true;
        settings.PopupAnimationType = DevExpress.Web.AnimationType.None;
        settings.ShowHeader = true;
        settings.HeaderText = "Cheque Detail ";
        settings.Modal = true;
        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.ScrollBars = System.Web.UI.WebControls.ScrollBars.Vertical;
        settings.EnableClientSideAPI = true;

        settings.ClientSideEvents.BeginCallback = "beginchequeCallBack";
        //settings.ClientSideEvents.EndCallback = "function(s,e){ initialiseSeriesGenerateActions(s,e);}";

        //settings.ClientSideEvents.CloseUp = "function(s, e){ ASPxClientEdit.ClearEditorsInContainer(null, '', true); }";
    }).GetHtml()