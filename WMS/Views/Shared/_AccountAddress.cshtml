@model Ganedata.Core.Entities.Domain.AccountAddresses
<hgroup>
    <h2><span>Account Address</span></h2>
    <h3><span>@Html.ValidationSummary("", new { @id = "vldAccountAddress" })</span></h3>
</hgroup>
@using (Html.BeginForm("SaveAccountAddress", "Account", FormMethod.Post, new { @id = "frmAccountAddress" }))
{

    @Html.HiddenFor(m => m.AddressID)
    @Html.HiddenFor(m => m.AccountID)
    <div class="col-md-12 pull-left">
        <div class="input-group h-100 justify-content-center align-items-center">
            <label class ="col-md-4">Name<span style="color:red"> *</span></label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>
        <div class="input-group h-100 justify-content-center align-items-center">
            <label class ="col-md-4">Address Line 1<span style="color:red"> *</span></label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.AddressLine1)
                @Html.ValidationMessageFor(model => model.AddressLine1)
            </div>
        </div>
        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.LabelFor(model => model.AddressLine2, htmlAttributes: new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.AddressLine2)
                @Html.ValidationMessageFor(model => model.AddressLine2)
            </div>
        </div>
        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.LabelFor(model => model.AddressLine3, htmlAttributes: new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.AddressLine3)
                @Html.ValidationMessageFor(model => model.AddressLine3)
            </div>
        </div>
        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.LabelFor(model => model.Telephone, htmlAttributes: new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Telephone)
                @Html.ValidationMessageFor(model => model.Telephone)
            </div>
        </div>
        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.LabelFor(model => model.Town, htmlAttributes: new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Town)
                @Html.ValidationMessageFor(model => model.Town)
            </div>
        </div>
        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.LabelFor(model => model.PostCode, htmlAttributes: new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.PostCode)
                @Html.ValidationMessageFor(model => model.PostCode)
            </div>
        </div>
        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.Label("Country", htmlAttributes: new { @class = "col-md-4" })
            <div class="col-md-8">
                <div>
                    @Html.DropDownListFor(m => m.CountryID, new SelectList(ViewBag.GlobalCountries, "CountryID", "CountryName"), new { data_placeholder = "Choose Country", @class = "chosen-select" })
                </div>
            </div>
        </div>
        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.LabelFor(model => model.AddTypeDefault, htmlAttributes: new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.AddTypeDefault)
                @Html.ValidationMessageFor(model => model.AddTypeDefault)
            </div>
        </div>
        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.LabelFor(model => model.AddTypeShipping, htmlAttributes: new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.AddTypeShipping)
                @Html.ValidationMessageFor(model => model.AddTypeShipping)
            </div>
        </div>
        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.LabelFor(model => model.AddTypeMarketing, htmlAttributes: new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.AddTypeMarketing)
                @Html.ValidationMessageFor(model => model.AddTypeMarketing)
            </div>
        </div>
    </div>

    if (!Request.Url.AbsolutePath.ToLower().Contains("saveaccountaddress"))
    {

        <div class="col-md-10 bottom-right-popup">
            <input type="button" onclick="saveAccountAddress()" value="Save" class="btn btn-primary" />
            <input type="button" onclick="javascript: ModalAccountAddress.Hide();" value="Cancel" class="btn btn-default" />
        </div>
    }
    else
    {
        <div class="col-md-10 bottom-right-popup">
            <input type="submit" value="Save" class="btn btn-primary" />
            <div class="btn btn-default"> @Html.ActionLink("Cancel", "Edit", null, null, null, "addresses", new { @id = Session["account"] }, null)</div>

        </div>
    }
}
