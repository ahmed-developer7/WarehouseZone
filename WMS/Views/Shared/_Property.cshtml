@model Ganedata.Core.Entities.Domain.PProperty

@{
    ViewBag.Title = "Create";
}

<h2><span>Create Property</span></h2>

@using (Html.BeginForm("", "", FormMethod.Post, new { @id = "frmproperty" }))
{
    <div class="col-md-12 pull-left">

        @Html.AntiForgeryToken()
        @Html.Hidden("SiteId", 100)

        <div class="form-horizontal sync-forms">

            @Html.ValidationSummary(true, "", new { @class = "text-danger", @id = "vldproperty" })
            <div class="input-group h-100 justify-content-center align-items-center">
                <label class ="col-md-4">Property Code<span style="color:red"> *</span></label>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.PropertyCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PropertyCode, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.CurrentLandlordId, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    <div class="col-11 p-0 mt-1 pull-left">
                        @Html.DropDownListFor(m => m.CurrentLandlordId, ViewBag.CurrentLandlordIds as IEnumerable<SelectListItem>, new { @class = "chosen-select" })
                    </div>
                    <div class="col-1 p-0 pull-left">
                        <input type="button" onclick="javaScript:ModelLandlord.Show();" class="btn btn-primary" value="+">
                    </div>
                    @Html.ValidationMessageFor(model => model.CurrentLandlordId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.Label("Current Tenant", htmlAttributes: new { @for = "CurrentPTenentId", @class = "col-md-4" })
                <div class="col-md-8">
                    <div class="col-11 p-0 mt-1 pull-left">
                        @Html.DropDownListFor(m => m.CurrentPTenentId, ViewBag.CurrentPTenentIds as IEnumerable<SelectListItem>, new { @class = "chosen-select" })
                    </div>
                    <div class="col-1 p-0 pull-left">
                        <input type="button" onclick="javaScript:ModelPTenent.Show();" class="btn btn-primary" value="+">
                    </div>
                </div>
            </div>

            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.AddressLine1, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AddressLine1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.AddressLine2, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.AddressLine2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AddressLine2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.AddressLine3, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.AddressLine3, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AddressLine3, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.AddressLine4, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.AddressLine4, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AddressLine4, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.AddressLine5, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.AddressLine5, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AddressLine5, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="input-group h-100 justify-content-center align-items-center">
                <label class ="col-md-4">Post Code<span style="color:red"> *</span></label>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.AddressPostcode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AddressPostcode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.PropertyBranch, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.PropertyBranch, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PropertyBranch, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-offset-2 col-md-12 bottom-right-popup">
        <input type="button" onclick="submitProperty()" value="Save" class="btn btn-primary" />
        <input type="button" value="Cancel" onclick="javascript:ModelProperty.Hide();" class="btn btn-default" />

    </div>
}