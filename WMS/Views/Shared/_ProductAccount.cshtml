@model Ganedata.Core.Entities.Domain.ProductAccountCodes
<hgroup>
    <h2><span>Product Account</span></h2>
    <h3><span>@Html.ValidationSummary("", new { @id = "vldPrAccountCode" })</span></h3>
</hgroup>
@using (Html.BeginForm("SaveProductAccount", "Products", FormMethod.Post, new { @id = "frmproductaccountcode" }))
{
    @Html.HiddenFor(m => m.ProdAccCodeID)
    <div class="col-md-12 pull-left">
        <div class="input-group h-100 justify-content-center align-items-center">
            <label class ="col-md-4">Account</label>
            <div class="col-md-8">
                @Html.DropDownListFor(m => m.AccountID, new SelectList(ViewBag.Accounts, "accountid", "account"), new { @id = "productaccounts", @class = "chosen-select" })
            </div>
        </div>
        <div class="input-group h-100 justify-content-center align-items-center">
            <label class ="col-md-4">Account Code<span style="color:red"> *</span></label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.ProdAccCode)
                @Html.ValidationMessageFor(model => model.ProdAccCode)
            </div>
        </div>
    </div>

    if (!Request.Url.AbsolutePath.ToLower().Contains("saveproductaccount"))
    {
        <div class="col-md-offset-2 col-md-10 bottom-right-popup">
            <input type="button" onclick="productaccountSave()" value="Save" class="btn btn-primary" />
            <input type="button" onclick="cancelproductaccount()" value="Cancel" class="btn btn-default" />
        </div>
    }
    else
    {
        <div class="col-md-offset-2 col-md-10 bottom-right-popup">
            <input type="submit" value="Save" class="btn btn-primary" />
            <div class="btn btn-default"> @Html.ActionLink("Cancel", "Edit", null, null, null, "product-codes", new { @id = Session["pId"] }, null)</div>
        </div>
    }
}
