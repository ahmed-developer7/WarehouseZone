@using System.Web.UI.WebControls
@model Ganedata.Core.Entities.Domain.InventoryTransaction
@using (Html.BeginForm("", "", FormMethod.Post, new { @id = "frmprocProduct" }))
{
    @Html.HiddenFor(m => m.OrderID)
    @Html.HiddenFor(m => m.ProductId)
    @Html.HiddenFor(m => m.InventoryTransactionTypeId)
    <br />
    <h5>@ViewBag.ProductName</h5>
    <hr />
    @Html.AntiForgeryToken()

    <div class="col-md-12 pull-left">
        @Html.ValidationSummary(true, "", new { @id = "vldRecPrd" })
        @if (Request.UrlReferrer.AbsolutePath.ToLower().Contains("purchaseorders") || Request.UrlReferrer.AbsolutePath.ToLower().Contains("inventorytransaction") || Request.UrlReferrer.AbsolutePath.ToLower().Contains("salesorders") || Request.UrlReferrer.AbsolutePath.ToLower().Contains("worksorders") || Request.UrlReferrer.AbsolutePath.ToLower().Contains("transferorders"))
        {

            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.LocationId, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownListFor(m => m.LocationId, ViewBag.Locations as IEnumerable<SelectListItem>, new { @class = "chosen-select" })
                    @Html.ValidationMessageFor(model => model.LocationId)
                </div>
            </div>
        }
        @if (Request.UrlReferrer.AbsolutePath.ToLower().Contains("wastedgoodsreturn"))
        {
            <div class="input-group h-100 justify-content-center align-items-center ">
                @Html.Label("Wastage Reason", htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownListFor(m => m.WastageReasonId, ViewBag.WastageReasons as IEnumerable<SelectListItem>, new { @class = "chosen-select" })
                    @Html.ValidationMessageFor(model => model.WastageReasonId)
                </div>
            </div>
        }
        <div class="input-group h-100 justify-content-center align-items-center quantityor" style="display:@((ViewBag.cases == null || false) ? "active" : "none")">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.DevExpress().SpinEditFor(m => m.Quantity,
settings =>
{
    settings.Name = "Quantity";
    settings.Enabled = (ViewBag.QuantityEnabled != null && ViewBag.QuantityEnabled == true);
    settings.Properties.MaxValue = 9999999999;
    settings.Width = Unit.Percentage(100);
    settings.ControlStyle.CssClass = "form-control";
}
).GetHtml()
                @Html.ValidationMessageFor(model => model.Quantity)
            </div>
        </div>



        <div class="input-group h-100 justify-content-center align-items-center casequantity" style="display:@((ViewBag.cases==null||false) ? "none" : "active")">

            <label class="col-md-4">Case Quantity</label>
            <div class="col-md-8">
                <input type="text" class="form-control" onchange="calculateQuantity(event,true);" value="@ViewBag.caseProcess" />
                <input type="hidden" value="@ViewBag.processcase" id="processcase" />
            </div>

        </div>

        @if (ViewBag.Groups != null && (bool)ViewBag.Groups == true)
        {
            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.Label("ID", htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.TextBox("ID", (string)ViewBag.prodID, new { @class = "form-control proddesc", @placeholder = "ID" })

                </div>
            </div>
           

            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.Label("Fsc Percent", htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.TextBox("FscPercent", "", new { @class = "form-control prodFscPercent", @placeholder = "Fsc Percent" })


                </div>
            </div>

        }

        <div class="input-group h-100 justify-content-center align-items-center" id="divLocationsPicker">
        </div>
    </div>
    <div id="divProcessButtons" class="bottom-right-popup">

        @if (Request.UrlReferrer.AbsolutePath.ToLower().Contains("goodsreturn"))
        {
            <input type="button" onclick="returnnon_ser_Product()" value=@ViewBag.Title class="btn btn-primary pull-right" />
        }

        else if (Request.UrlReferrer.AbsolutePath.ToLower().Contains("blindshipment"))
        {
            <input type="button" onclick="BSsubmitProduct()" value=@ViewBag.Title class="btn btn-primary pull-right" />
        }
        else
        {
            if (Request.UrlReferrer.AbsolutePath.ToLower().Contains("salesorders") || Request.UrlReferrer.AbsolutePath.ToLower().Contains("worksorders") || Request.UrlReferrer.AbsolutePath.ToLower().Contains("transferorders"))
            {
                @*<input type="hidden" id="PickLocationsProductId" value="@Model.ProductId" />
                <script>
                            setTimeout(function() {
                                    PickLocations('@Model.ProductId');
                                },
                                300);
                </script>*@
            }
            else
            {
                if (ViewBag.RequiresBatchNumber == true)
                {
                    <div class="input-group h-100 justify-content-center align-items-center">
                        @Html.Label("*Batch Number", htmlAttributes: new { @class = "col-md-4" })
                        <div class="col-md-8">
                            @Html.TextBox("ProcessBatchNumber", null, new { @class = "form-control", @placeholder = "Batch Number" })
                        </div>
                    </div>
                }
                if (ViewBag.RequiresExpiryDate == true)
                {
                    <div class="input-group h-100 justify-content-center align-items-center">
                        @Html.Label("*Expiry Date", htmlAttributes: new { @class = "col-md-4" })
                        <div class="col-md-8">
                            @Html.DevExpress().DateEdit(settings =>
                       {
                           settings.Name = "ProcessExpiryDate";
                           settings.Properties.DisplayFormatString = "dd/MM/yyyy";
                           settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                           settings.ControlStyle.CssClass = "form-control";
                           settings.Properties.ClientSideEvents.GotFocus = "function(s, e) { s.ShowDropDown(); }";
                           settings.Date = DateTime.UtcNow;
                       }).GetHtml()
                        </div>
                    </div>
                }
            }
            <input type="button" onclick="submitProduct()" value=@ViewBag.Title class="btn btn-primary pull-right" />
        }

        <input type="button" onclick="javacript: ModelRecProduct.Hide(); ModelGoodsReturn.Hide(); ModelBS.Hide();" value="Cancel" class="btn btn-default  pull-right" />

    </div>
} 