@model Ganedata.Core.Entities.Domain.ProductSCCCodes
<hgroup>
    <h2><span>Product SCCCode</span></h2>
    <h3><span>@Html.ValidationSummary("", new { @id = "vldSCCCode" })</span></h3>
</hgroup>
@using (Html.BeginForm("SaveSCCCode", "Products", FormMethod.Post, new { @id = "frmSCCCode" }))
{
    @Html.HiddenFor(m => m.ProductSCCCodeId)
    @Html.HiddenFor(m => m.ProductId)
    <div class="col-md-6 pull-left">
        <div class="input-group h-100 justify-content-center align-items-center">
            <label class ="col-md-4">Code<span style="color:red"></span></label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.SCC)
                @Html.ValidationMessageFor(model => model.SCC)
            </div>
        </div>
        <div class="input-group h-100 justify-content-center align-items-center">
            <label class ="col-md-4">Quantity<span style="color:red"></span></label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.Quantity)
                @Html.ValidationMessageFor(model => model.Quantity)
            </div>
        </div>
    </div>
    if (!Request.Url.AbsolutePath.ToLower().Contains("savescccode"))
    {
        <div class="input-group h-100 justify-content-center align-items-center">
            <div class="col-md-offset-2 col-md-10 bottom-right">
                <input type="button" onclick="saveSCCCode()" value="Save" class="btn btn-primary" />
                <input type="button" onclick="javascript: ModalAccountAddress.Hide();" value="Cancel" class="btn btn-default" />
            </div>
        </div>
    }
    else
    {
        <div class="col-md-offset-2 col-md-10 bottom-right">
            <input type="submit" value="Save" class="btn btn-primary" />
            <div class="btn btn-default"> @Html.ActionLink("Cancel", "Edit", null, null, null, "product-codes", new { @id = Session["pId"] }, null)</div>
        </div>
    }
}
