@model Ganedata.Core.Entities.Domain.PTenant

@{
    ViewBag.Title = "Create";
}

<h2><span>Create</span></h2>
@using (Html.BeginForm("", "", FormMethod.Post, new { @id = "frmptenent" }))
{
    <div class="col-md-12 pull-left">

        @Html.AntiForgeryToken()
        @Html.Hidden("SiteId", 100)

        <div class="form-horizontal sync-forms">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="input-group h-100 justify-content-center align-items-center">
                <label class ="col-md-4">Tenant Code<span style="color:red"> *</span></label>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.TenantCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TenantCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.Label("Tenancy Code", htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.TenantYCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TenantYCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="input-group h-100 justify-content-center align-items-center">
                <label class ="col-md-4">Tenant Full Name<span style="color:red"> *</span></label>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.TenantFullName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TenantFullName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.AddressLine1, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AddressLine1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.AddressLine2, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.AddressLine2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AddressLine2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.AddressLine3, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.AddressLine3, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AddressLine3, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.AddressLine4, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.AddressLine4, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AddressLine4, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.AddressPostcode, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.AddressPostcode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AddressPostcode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.HomeTelephone, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.HomeTelephone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HomeTelephone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.WorkTelephone1, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.WorkTelephone1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.WorkTelephone1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.WorkTelephone2, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.WorkTelephone2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.WorkTelephone2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.WorkTelephoneFax, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.WorkTelephoneFax, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.WorkTelephoneFax, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-offset-2 col-md-12 bottom-right-popup">
        <input type="button" onclick="submitPTenent()" value="Save" class="btn btn-primary" />
        <input type="button" value="Cancel" onclick="javascript:ModelPTenent.Hide();" class="btn btn-default" />

    </div>
}