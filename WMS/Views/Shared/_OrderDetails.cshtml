@using System.Web.UI.WebControls

@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        if (ViewBag.CurrencySymbol == null)
        {
            ViewBag.CurrencySymbol = "£";
        }

        settings.Name = ViewBag.setName;
        settings.CallbackRouteValues = ViewBag.routeValues;
        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);

        settings.Settings.ShowHeaderFilterButton = false;
        settings.SettingsPopup.HeaderFilter.Height = 200;
        settings.Settings.ShowGroupFooter = GridViewGroupFooterMode.VisibleAlways;
        settings.Settings.ShowFooter = true;
        settings.Settings.ShowFilterBar = GridViewStatusBarMode.Visible;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCells;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.KeyFieldName = "OrderDetailID";
        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowFocusedRow = true;
        settings.Columns.Add("ProductMaster.Name", "Product");
        settings.Columns.Add("ProductMaster.SKUCode", "Sku Code");
        settings.Columns.Add("Qty", "Qty");
        settings.Columns.Add("CaseQuantity", "Case Quantity");
        if (ViewBag.CurrencySymbol != null)
        {
            settings.Columns.Add(column =>
            {
                column.FieldName = "OrderDetailID";
                column.Caption = "Currency";
                column.Width = Unit.Pixel(50);
                column.SetDataItemTemplateContent(m =>
                {
                    ViewContext.Writer.Write(ViewBag.CurrencySymbol.ToString());
                });
            });
        }
        settings.Columns.Add("Price");
        settings.Columns.Add("WarrantyAmount", "War Amt");

        settings.Columns.Add("TaxName.PercentageOfAmount", "Tax %");
        settings.Columns.Add("TaxAmount", "Tax");
        settings.Columns.Add("Notes");

        settings.CustomJSProperties = (s, e) =>
        {
            MVCxGridView gridd = (MVCxGridView)s;
            e.Properties["cpRowCount"] = gridd.VisibleRowCount;
        };

        settings.Columns.Add(column =>
        {
            column.FieldName = "TotalAmount";
            column.Caption = "Total Amt";
        });
        settings.CustomUnboundColumnData = (sender, e) =>
        {
            if (e.Column.FieldName == "Total")
            {
                decimal price = e.GetListSourceFieldValue("Price") == null ? 0 : (decimal)e.GetListSourceFieldValue("Price");
                decimal quantity = Convert.ToInt32(e.GetListSourceFieldValue("Qty"));
                decimal taxamount = Convert.ToInt32(e.GetListSourceFieldValue("TaxAmount"));
                e.Value = (price * quantity) + taxamount;
            }
        };

        settings.HtmlDataCellPrepared = (sender, e) =>
        {
            if (e.DataColumn.FieldName == "TotalAmount")
            {
                e.Cell.BackColor = System.Drawing.Color.LightBlue;
                e.Cell.BorderColor = System.Drawing.Color.Black;
            }
        };

        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "TotalAmount").DisplayFormat = "Total = " + ViewBag.CurrencySymbol + "{0:n2}";
        settings.ClientSideEvents.FocusedRowChanged = "OnGridFocusedRowChanged";
        settings.ClientSideEvents.BeginCallback = "function(s,e){ beginorderDetCallBack(s,e); }";
        settings.ClientSideEvents.EndCallback = "function(s,e){   OnGridFocusedRowChanged(s,e); UpdateAccountDDForOrderDetails();  }";
        settings.SettingsPager.PageSizeItemSettings.Visible = true;
        settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "10", "20", "50" };

    });
}
@grid.Bind(Model).GetHtml()