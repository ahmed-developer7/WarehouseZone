@using System.Web.UI.WebControls
@model Ganedata.Core.Entities.Domain.InvoiceViewModel
@using Ganedata.Core.Entities.Helpers
@section scripts {

    @Html.DevExpress().GetStyleSheets(
        new StyleSheet { ExtensionType = ExtensionType.GridView, Theme = GaneStaticAppExtensions.DevexTheme }
        )

    @Html.DevExpress().GetScripts(
        new Script { ExtensionType = ExtensionType.GridView }
        )
}
@{
    ViewBag.Title = "Create Invoice";
}
<script src="@Url.Content("~/Scripts/Gane.EditInvoices.js")"></script>
@using (Html.BeginForm("SaveInvoice", "Invoice", FormMethod.Post, new { id = "frmInvoicesCreate" }))
{
    @Html.Hidden("InventoryTransactionTypeId", 100)
    if (Model.InvoiceMasterId > 0)
    {
        @Html.HiddenFor(m => m.AccountId)
    }
        @Html.HiddenFor(m => m.OrderProcessId)
        @Html.HiddenFor(m => m.NetAmount)
        @Html.HiddenFor(m => m.TaxAmount)
        @Html.HiddenFor(m => m.TaxDataHelper)
        @Html.HiddenFor(m => m.WarrantyDataHelper)
        @Html.HiddenFor(m => m.InvoiceMasterId)
        @*@Html.HiddenFor(m=> m.CardCharges)
            @Html.HiddenFor(m=> m.PostageCharges)*@
        @Html.HiddenFor(m => m.InvoiceTotal)
        <div class="col-md-5  pull-left">
            <h2 class="h2"><span>GENERATE INVOICE</span></h2>


            <div class="col-md-12 p-0" style="display:none">
                <div class="input-group h-100 justify-content-center align-items-center">
                    @Html.Label("Discount(%)", htmlAttributes: new { @class = "col-md-4" })
                    <div class="col-md-8">
                        @Html.DevExpress().SpinEdit(m=>
                             {
                                 m.Name = "DiscountBox";
                                 m.ControlStyle.CssClass = "form-control";
                                 m.Properties.MinValue = 0;
                                 m.Properties.MaxValue = ViewBag.discountPercentage??100;
                                 m.Width = Unit.Percentage(100);
                                // m.Properties.ClientSideEvents.NumberChanged = "function(s,e){ updateInvoiceTotals(); }";
                             }).Bind(0).GetHtml()
                    </div>
                </div>
            </div>


            <div class="col-md-12 p-0">
                <div class="col-md-12">
                    <div class="input-group h-100 justify-content-center align-items-center">
                        @Html.Label("Select Account", htmlAttributes: new { @class = "col-md-4" })
                        <div class="col-md-8">
                            @if (Model.InvoiceMasterId > 0)
                            {
                                @Html.DropDownList("AllAccounts",null, new { @class = "chosen-select", disabled = "disabled" })
                            }
                            else
                            {
                                @Html.DropDownListFor(m => m.AccountId, Model.AllAccounts, new { @class = "chosen-select" })
                            }
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="input-group h-100 justify-content-center align-items-center">
                        @Html.Label("Select Product", htmlAttributes: new { @class = "col-md-4" })
                        <div class="col-md-8 largecomboboxEdit">
                            @* @Html.DropDownListFor(m => m.ProductId, Model.AllProducts, new { @class = "chosen-select" })*@

                            @Html.Partial("~/Views/Shared/ProductLargeDataComboBoxPartial.cshtml")
                        </div>
                    </div>

                </div>

                <div class="col-md-12 input-group">
                    @Html.Label("Price", htmlAttributes: new { @class = "col-md-4" })
                    <div class="col-md-8">
                        @Html.DevExpress().SpinEdit(m =>
                        {
                            m.Name = "InvoiceProductPrice";
                            m.ControlStyle.CssClass = "form-control";
                            m.Properties.MinValue = 0;
                            m.Properties.MaxValue = 999999;
                            m.Width = Unit.Percentage(100);
                            m.Properties.NullText = "Unit Price";
                        }).GetHtml()
                    </div>
                </div>


                <div class="col-md-12 pull-left input-group">
                    @Html.Label("Qty", htmlAttributes: new { @class = "col-md-4" })
                    <div class="col-md-8">
                        @Html.DevExpress().SpinEdit(m =>
                        {
                            m.Name = "InvoiceProductQty";
                            m.ControlStyle.CssClass = "form-control";
                            m.Properties.MinValue = 1;
                            m.Properties.MaxValue = 999999;
                            m.Width = Unit.Percentage(100);
                            m.Properties.NullText = "Quantity";
                        }).GetHtml()
                    </div>
                </div>
                <div class="col-md-12 pull-left input-group">
                    @Html.Label("Invoice Date", htmlAttributes: new { @class = "col-md-4" })
                    <div class="col-md-8">
                        @Html.DevExpress().DateEdit(m =>
                   {
                       m.Name = "InvoiceDate";
                       m.Width = Unit.Pixel(120);
                       m.Properties.ClientSideEvents.DateChanged = "function(s,e){ updateInvoiceDate(); }";
                       m.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                       m.ControlStyle.CssClass = "form-control";
                       m.Properties.ClientSideEvents.GotFocus = "function(s, e) { s.ShowDropDown(); }";

                   }).Bind(DateTime.UtcNow).GetHtml()
                    </div>
                </div>
                @*<div class="col-md-12 pull-left input-group">
                    @Html.Label("Postal Charge(£)", htmlAttributes: new { @class = "col-md-4" })
                    <div class="col-md-8">
                        @Html.DevExpress().SpinEdit(m =>
                        {
                            m.Name = "PostageCharges";
                            m.ControlStyle.CssClass = "form-control";
                            m.Properties.MinValue = 0;
                            m.Properties.MaxValue = 9999999999;
                            m.Width = Unit.Percentage(100);
                            m.Properties.ClientSideEvents.NumberChanged = "function(s,e){ updateInvoiceTotals(); }";
                        }).Bind(0).GetHtml()
                    </div>
                </div>
                <div class="col-md-12 pull-left input-group">
                    @Html.Label("Card Charge(£)", htmlAttributes: new { @class = "col-md-4" })
                    <div class="col-md-8">
                        @Html.DevExpress().SpinEdit(m =>
                        {
                            m.Name = "CardCharges";
                            m.ControlStyle.CssClass = "form-control";
                            m.Properties.MinValue = 0;
                            m.Properties.MaxValue = 9999999999;
                            m.Width = Unit.Percentage(100);
                            m.Properties.ClientSideEvents.NumberChanged = "function(s,e){ updateInvoiceTotals(); }";
                        }).Bind(0).GetHtml()
                    </div>
                </div>*@
                @*<div class="col-md-12 pull-left input-group">
                    @Html.Label("Select Warranty", htmlAttributes: new { @class = "col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(m => m.WarrantyId, Model.AllWarranties, new { @class = "chosen-select" })
                    </div>
                </div>*@
                <div class="col-md-12 pull-left input-group" style="display:none;">
                    @Html.Label("Select Tax", htmlAttributes: new { @class = "col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(m => m.TaxId, Model.AllTaxes, new { @class = "chosen-select"})
                    </div>
                </div>

            </div>
            <div class="col-md-12">
                <button type="button" class="btn btn-primary btn-invoice-add-product pull-right mr-3"><b class="fa fa-plus-sign"></b><span>Add Item</span></button>
            </div>
        </div>

        <div class="col-md-7 pull-left">
            <br /><br />
            @Html.Action("GetInvoicePreview")
        </div>

        <div class="col-md-12 bottom-right">
            <button type="button" class="btn btn-primary btn-invoice-save-invoice pull-left" onclick="frmInvoicesCreate.submit()"><b class="fa fa-floppy-o"></b>Save Invoice</button>
        </div>

    }
    

    @*@using (Html.BeginForm("ExportInvoice", "Invoice", FormMethod.Post, new { id = "frmPDFExporter" }))
        {
            @Html.Hidden("ExportHtml", null)
            @Html.Hidden("OrderProcessID", Model.OrderProcessId)
            @Html.Hidden("ReturnUrl", Request.RawUrl)
        }*@
