@Html.DevExpress().GridView(
    settings =>
    {
        settings.Name = "gridMasterInvoices";
        settings.CallbackRouteValues = new { Controller = "Invoice", Action = "InvoicesListPartial"};
        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
        settings.CustomBindingRouteValuesCollection.Add(
        GridViewOperationType.Paging,
        new { Controller = "Invoice", Action = "_InvoiceCompleteViewsPaging"}
        );

        settings.CustomBindingRouteValuesCollection.Add(
        GridViewOperationType.Filtering,
        new { Controller = "Invoice", Action = "_InvoiceCompleteGridViewFiltering"}
        );

        settings.CustomBindingRouteValuesCollection.Add(
        GridViewOperationType.Sorting,
        new { Controller = "Invoice", Action = "_InvoiceCompleteGridViewDataSorting" }
        );

        settings.Settings.ShowHeaderFilterButton = false;
        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowSelectCheckbox = true;
        settings.CommandColumn.SelectAllCheckboxMode = GridViewSelectAllCheckBoxMode.AllPages;
        settings.SettingsPopup.HeaderFilter.Height = 200;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowFocusedRow = true;
        settings.Styles.Header.CssClass="";
        settings.ClientSideEvents.DetailRowExpanding = "function(s,e){ OnDetailsRowExpanding(s,e); }";
        settings.ClientSideEvents.BeginCallback = "function(s,e){ OnProcessedDetailPOSTCallback(s,e); }";
        settings.ClientSideEvents.SelectionChanged = "SelectionChangeds";
        settings.ClientSideEvents.EndCallback = "EndCallBackPostToAccount";

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCells;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.KeyFieldName = "InvoiceMasterId";
        settings.Columns.Add("InvoiceNumber").Width = System.Web.UI.WebControls.Unit.Percentage(2);
        settings.Columns.Add("AccountName").Width = System.Web.UI.WebControls.Unit.Percentage(15);
        settings.Columns.Add(column => {
            column.FieldName = "OrderNumber";
            column.Caption = "OrderNumber";
            column.Width= System.Web.UI.WebControls.Unit.Percentage(10);

        });
        settings.Columns.Add("NetAmount").Width = System.Web.UI.WebControls.Unit.Percentage(5);

        settings.Columns.Add("TaxAmount").Width = System.Web.UI.WebControls.Unit.Percentage(5);
        settings.Columns.Add("WarrantyAmount").Width = System.Web.UI.WebControls.Unit.Percentage(5);
        settings.Columns.Add("CardCharges").Width = System.Web.UI.WebControls.Unit.Percentage(5);
        settings.Columns.Add("PostageCharges").Width = System.Web.UI.WebControls.Unit.Percentage(5);
       
        settings.Columns.Add(u =>
        {
            u.FieldName = "InvoiceTotal";
            u.Width = System.Web.UI.WebControls.Unit.Percentage(5);
            u.PropertiesEdit.DisplayFormatString = "n2";
            u.Settings.AutoFilterCondition = AutoFilterCondition.Equals;
            u.ColumnType = MVCxGridViewColumnType.SpinEdit;
        });


        settings.Columns.Add("InvoiceDate").Width = System.Web.UI.WebControls.Unit.Percentage(5);
        settings.Columns.Add("Emails").Width = System.Web.UI.WebControls.Unit.Percentage(5);
        settings.Columns.Add(column =>
        {
            column.Width = System.Web.UI.WebControls.Unit.Percentage(15);
            column.Caption = "Actions";
            column.SetDataItemTemplateContent(m =>
            {
                var id = (int?)DataBinder.Eval(m.DataItem, "InvoiceMasterId");
                ViewContext.Writer.Write("<a class='btn fa fa-pencil' href='/Invoice/CreateInvoice/" + id + "' title='Update Invoice'></a>");
                ViewContext.Writer.Write("<a class='btn fa fa-print' href='/Reports/InvoiceDetails/" + id + "' title='Print Invoice' target='_blank'></a>");
            });
        });
        settings.Columns.Add(column =>
        {
            column.Width = System.Web.UI.WebControls.Unit.Percentage(2);
            column.Caption = "Notifs";
            column.SetDataItemTemplateContent(m =>
            {
                var invoicemasterId = (int)DataBinder.Eval(m.DataItem, "InvoiceMasterId");
                var emailcount = (int?)DataBinder.Eval(m.DataItem, "EmailCount");
                var functon = string.Format("showEmailsInvoice({0})", invoicemasterId);
                if (emailcount.HasValue && emailcount > 0)
                {
                    ViewContext.Writer.Write("<a target='javascript:;' alt='Show Emails' class='fa fa-send-o' onclick=" + functon + ">     <b>" + emailcount + "</b></a>");
                }

            });


        });
        settings.SettingsDetail.ShowDetailRow = true;
        settings.SetDetailRowTemplateContent(c =>
        {
            var id = (int?) DataBinder.Eval(c.DataItem, "InvoiceMasterId");
            Html.RenderAction("InvoiceDetailsPartial", new { id = id });
        });

    }).BindToCustomData(Model).GetHtml()