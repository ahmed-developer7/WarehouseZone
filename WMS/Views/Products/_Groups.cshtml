@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = ViewBag.productId + "groupsgridview";
        settings.CallbackRouteValues = new { Controller = "Products", Action = "_Groups", productId = ViewBag.productId };
        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);

        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsPopup.HeaderFilter.Height = 200;
        settings.SettingsPopup.HeaderFilter.MinWidth = 500;
        settings.Settings.ShowFilterBar = GridViewStatusBarMode.Visible;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCells;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.KeyFieldName = "ProductGroupId";
        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowFocusedRow = true;

        settings.Columns.Add("ProductGroup");
        settings.ClientSideEvents.FocusedRowChanged = "OnGridFocusedRowChanged";
        settings.SettingsPager.PageSizeItemSettings.Visible = true;
        settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "10", "20", "50" };
    });
}
@grid.Bind(Model).GetHtml()

@if (Request.Url.AbsolutePath.ToLower().Contains("edit"))
{
    <div class="col-md-12 p-0">
        @Html.ActionLink("Create New", "SaveProductGroup", null, new { @class = "btn btn-primary  " })
        @Html.ActionLink("Update", "SaveProductGroup", null, new { @class = "btn btn-primary  Caction", @id = "lnksavePrdGroup" })
        @Html.ActionLink("Delete", "DeleteProductGroup", null, new { @class = "btn btn-primary  Caction", @id = "lnksavePrdGroup" })
    </div>
}