@model Ganedata.Core.Entities.Domain.ProductMaster
@using Ganedata.Core.Entities.Helpers

@section scripts {

    @Html.DevExpress().GetStyleSheets(
        new StyleSheet { ExtensionType = ExtensionType.SpinEdit, Theme = GaneStaticAppExtensions.DevexTheme },
        new StyleSheet { ExtensionType = ExtensionType.DateEdit, Theme = GaneStaticAppExtensions.DevexTheme }
        )

    @Html.DevExpress().GetScripts(
        new Script { ExtensionType = ExtensionType.SpinEdit },
        new Script { ExtensionType = ExtensionType.DateEdit }
        )
}

@{
    ViewBag.Title = "Delete product";
}
<h2><span>Delete Product</span></h2>
@if (ViewBag.Kits == null || ViewBag.back == 1)
{
    <h3 class="alert alert-danger">Are you sure you want to delete this?</h3>
}
else if (ViewBag.Kits != null)
{
    <h2>This product cannot be deleted as it is used as kit product in folowing product(s)</h2>
    foreach (Ganedata.Core.Entities.Domain.ProductMaster item in ViewBag.Kits)
    {
        <p>
            <strong> @Html.ActionLink(item.ProductId.ToString() + " - " + item.Name, "Edit", new { id = item.ProductId })</strong>
        </p>
    }
}
<div>
    <dl class="dl-horizontal col-md-6 pull-left">
        <dt>
            @Html.DisplayNameFor(model => model.GlobalTax.TaxName)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.GlobalTax.TaxName)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.GlobalUOM.UOM)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.GlobalUOM.UOM)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.GlobalWeightGroups.Description)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.GlobalWeightGroups.Description)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ProductLotOptionsCodes.Description)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ProductLotOptionsCodes.Description)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ProductLotProcessTypeCodes.Description)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ProductLotProcessTypeCodes.Description)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.SKUCode)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.SKUCode)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.SecondCode)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.SecondCode)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.BarCode)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.BarCode)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.BarCode2)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.BarCode2)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Serialisable)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Serialisable)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.LotOption)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.LotOption)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ShelfLifeDays)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ShelfLifeDays)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ReorderQty)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ReorderQty)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ShipConditionCode)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ShipConditionCode)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.CommodityCode)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.CommodityCode)
        </dd>
    </dl>
    <dl class="dl-horizontal col-md-6 pull-left">
        <dt>
            @Html.DisplayNameFor(model => model.CommodityClass)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.CommodityClass)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Height)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Height)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Width)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Width)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Depth)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Depth)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Weight)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Weight)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.PercentMargin)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.PercentMargin)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.DateCreated)
        </dt>
        <dd>
            @DateTimeToLocal.Convert(Model.DateCreated, ViewBag.TimeZone)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.DateUpdated)
        </dt>
        <dd>
            @DateTimeToLocal.Convert(Model.DateUpdated, ViewBag.TimeZone)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.CreatedBy)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.CreatedBy)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.UpdatedBy)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.UpdatedBy)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.IsActive)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.IsActive)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.IsDeleted)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.IsDeleted)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ProdStartDate)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ProdStartDate)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Discontinued)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Discontinued)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.DiscontDate)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.DiscontDate)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.TenantId)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.TenantId)
        </dd>
    </dl>
    <div class="col-md-offset-2 col-md-10 bottom-right">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <input type="hidden" value="@ViewBag.back" name="back" />
            <div class="form-actions no-color">
                @if (ViewBag.Kits == null || ViewBag.back == 1)
                {
                    <input type="submit" value="Delete" class="btn btn-primary" />
                }
                @if (ViewBag.back == 1)
                {
                    <div class="btn btn-default"> @Html.ActionLink("Cancel", "Edit", new { @id = Session["pId"] })</div>
                }
                else
                {
                    <div class="btn btn-default"> @Html.ActionLink("Cancel", "Index")</div>
                }
            </div>
        }
    </div>
</div>
